#cafe_manager_v2.py
#version2: basic cafe manager
#this program is a cafe manager for user's to make accounts, take orders and display an invoice
#r.tanner 29/04/2023

#declaring the constants/variables
MIN_USER_AGE = 13 #the minimum age the user can be 
MAX_USER_AGE = 18 #the maximum age the user can be
LOG_IN_ATTEMPTS = 3 #user's have 3 attempts to log in or they will be locked out
order_total = 0 #the initial price total of the user's order

#creating a dictionary for the user's accounts
accounts_dict = {"r" :"t", "rosetta": "tanner"}

#the price of all the items the user has put into their order
price_list = []

#the items the user selects for their order
users_order = {}

#a dictionary for the entire cafe menu
menu_dictionary = {
"Lunch items" :
{
"Instant Noodles" : 4.00,
"Sausage Roll" : 4.50, 
"Mince Pie" : 3.50,
"Sushi" : 5.00, 
"Loaded Fries": 6.00, 
"Chicken Sandwich" : 4.00, 
"Bbq Pork Bun" : 3.00,
}, 
"Snack items" :
{
"Cookie" : 2.50, 
"Apple" : 2.00,
"Chips" : 2.50, 
"Brownie" : 2.00, 
"Banana" : 2.00, 
}, 
"Drink items" : 
{
"Water" : 2.50, 
"Coke" : 3.00, 
"Sprite" : 3.00, 
"Orange Juice" : 3, 
"Berry Smoothie" : 5.
}
}

#introducing the user to the program
print("Welcome to the Cafe Manager. \nHere you will be able to create an account or log into an existing one, place your cafe order and recieve an invoice to your order. ")

#creating a space function in order to create whitespace
def space():
    print(" ")

#creating a log in function, so user's can log in to make the program extra secure
def log_in():
    LOG_IN_ATTEMPTS = 3 #the user has three attempts to log in with their correct details.
    while LOG_IN_ATTEMPTS >= 1:
        username = input("Enter your username : ").strip()
        if username in accounts_dict:
            check_username = accounts_dict.get(username) #making the user's username equivalent to the correct username in the dictionary. 

        else:
            check_username = None #if the user's username is not found in the dictionary
        password = input("Enter your password: ").strip()

        if check_username == password:
            print("Access Granted.") #if the user enters the correct username and password
            space()
            break

        else: #if the user's details are incorrect, they will have one less try.
            LOG_IN_ATTEMPTS -=1
            print("Incorrect details. Please try again.")
            print(f"Attempts remaining: {LOG_IN_ATTEMPTS}")
            space()
            if LOG_IN_ATTEMPTS == 0:
                exit()

#a new account function for users to create a new account
def new_account():
    print("Passwords must be at least 5 characters and must include at least one integer and one letter. ") #this is to make sure the program is secure
    while True: 
        username = input("Enter your new username : ").strip()

        while True:
            password = input("Enter your new password : ").strip()
            if len(password) < 4: #if the users password is not long enough
                print("Password is too short. Try again. ")
                continue

            elif password.isdigit(): #if the users password consists of only integers
                print("Please include a letter in your password. Try again. ")
                continue

            elif password.isalpha(): #if the users password consists of only letters
                print("Please include an integer in your password. Try again. ")
                continue
            break
        break

    accounts_dict[username] = password #adding the user's username and password to the accounts dictionary
    print("Success. New account made. ")
    space()


#a function to ask the user their name and see if they are old enough to sign up 
def age_check():    
    while True:
        try:
            age = int(input("Enter your age: "))

            if age > 0 and age <= 120: #if the user enters a valid age
                next
                if age >= MIN_USER_AGE and age <= MAX_USER_AGE: #if the user enter's an age that is valid. 
                    break

                else: #if the user enters an invalid age, they cannot use the program. 
                    print(f"Your are not in the age range to be eligible for this program. User's must be between {MIN_USER_AGE} and {MAX_USER_AGE}.")
                    space()
                    quit()
                
            else:
                print("This is not a valid age. Please enter a valid answer. ")

        except ValueError: #if the user does not enter a valid integer. 
            print("Invalid answer. Please enter a valid integer. ")
        space()

#function to add the user's item and quantity to the user's order dictionary
def add_item(order, quantity):
    users_order[order] = quantity

#main menu function
def menu():
    print("Here is today's cafe menu: ")
    number = 1
    for key in menu_dictionary:
        print(f"{number}. {key}")
        number += 1
    
    while True:
            try: 
                #asking the user what category they would like to order from
                category_choice = int(input("What category would you like to order from? "))
                space()

                if category_choice == 1:
                    category_choice = "Lunch items"     

                    category = list(menu_dictionary).index(category_choice) #gets the index value of the lunch category from the menu
                    items = list(menu_dictionary.values())[category] #finds the dictionary of lunch items from the lunch categories index number
                    for object, price in items.items(): #prints the lunch items and prices from the lunch item dictionary
                        print(f"- {object}, ${price}")
                    space()
                    break
                
                
                elif category_choice == 2:
                    category_choice = "Snack items"     
                    category = list(menu_dictionary).index(category_choice) #gets the index value of the snack category from the menu
                    items = list(menu_dictionary.values())[category] #finds the dictionary of snack items from the snack categories index number 
                    for object, price in items.items(): #prints the snack items and prices from the snack items dictionary
                        print(f"- {object}, ${price}")
                    space()
                    break
                
                elif category_choice == 3:
                    category_choice = "Drink items"  
                    category = list(menu_dictionary).index(category_choice) #gets the index value of the drink category from the menu
                    items = list(menu_dictionary.values())[category] #finds the dictionary of drink items from the drink categories index number 
                    for object, price in items.items(): #prints the drink items and prices from the drink items dictionary
                        print(f"- {object}, ${price}")  
                    space() 
                    break

                else:
                    print("Please enter either 1, 2 or 3. ")

            except ValueError: #if users do not enter 1, 2, or 3
                print("Please enter either 1, 2, or 3. ")

    while True:
        #asking the user which item they would like to order today
        order = input("What would you like to order today? ").strip().title()

        category_option = menu_dictionary[category_choice] #getting the users chosen catgegory and ensuring the item they have inputted is from the categories item dictionary
        if order in category_option.keys(): #if the user enters a valid item
            while True:
                try:
                    quantity = int(input(f"How many {order}'s would you like? "))
                    if quantity > 0 and quantity < 11: #if users enter a quantity between 1 and 10
                        break
                    
                    else:
                        print("Please enter a valid integer between 0 and 10. ")

                except ValueError:
                    print("Please enter a valid integer. ")

            price_item = menu_dictionary[category_choice][order] #getting the price of the user's selected item from the menu dictionary
            price_list.append(price_item) #adding this price to the price list
            add_item(order, quantity) #adding the item and quantity to the users_item dictionary
            break
        
        else: #if the user enters an invalid item
            print("This is not an available item. Please try again")
            space()

    while True: #asking the user if they would like to order anything else
        space()
        order_more = input("Would you like to order anything else today? (y/n) ").strip().lower()
        space()
        if order_more == "y" or order_more == "yes": #if the user wants to order more
            menu()
        elif order_more == "n" or order_more == "no" : #if the user does not want to order anything else run the order summary function
            order_summary()

        else: #if the user does not enter a valid answer
            print("Please enter either 'y' or 'n'")

def order_summary():
    order_total = 0

    while True:
        try: 
            #asking the user to confirm their order
            confirm_order = int(input("Type 1 to purchase order or Type 2 to cancel order. "))
    
            if confirm_order == 1: #confirms order and prints order summart
                space()
                print("Here is your order summary: ")
                space()
                x = 0
                print("------------------------------------------------------------")
                print("Order Invoice")
                for option in users_order:
                    item1 = list(users_order).index(option) #finds the index value of the food item from the user's order
                    quantity = list(users_order.values())[item1] #finds the quantity of the food item required, using the index value
                    print(f"- {option}, Quantity: {quantity}, ${price_list[x]} each") #prints the item, quantity and price
                    order_total += (price_list[x] * quantity) #adds the items to the order total
                    x += 1

                print(f"The price of your order comes to ${order_total}. ")
                print("------------------------------------------------------------")
                space()

                print("Thank you for using Cafe Manager. Come back soon!")

                exit()
            
            elif confirm_order == 2: #cancels the order and exits the program
                space()
                print("Your order has been cancelled. Thank you for using the Cafe Manager!")
                exit()
            
            else: #if the user does not enter 1 or 2
                print("Please enter either 1 or 2. ")
                space()

        except ValueError: #if the user does not enter a valid integer
            print("Please enter either 1 or 2. ")
            space()

#main routine
while True:
    try:
        #asking the user which function they would like to run
        print("1. Login \n2. Create new account\n3. Exit")
        choice = int(input("Enter your choice: "))
        if choice == 1 or choice == 2 or choice == 3:
            break

        #if the user does not enter a valid menu option.
        else:
            print("Please enter a valid input of 1, 2, or 3. ")
            space()
    
    #if the user does not enter an integer. 
    except ValueError:
        print("Invalid answer. Please enter a valid integer.")
        space()

#if the user chooses the log in function
if choice == 1:
    log_in()
    menu()

#if the user chooses to create a new account
if choice == 2:
    age_check()
    new_account()
    menu()

#if the user wants to exit the cafe manager program
if choice == 3:
    print("Thank you for using Cafe manager! Come back soon.")
    exit



